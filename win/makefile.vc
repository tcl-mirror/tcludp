#------------------------------------------------------------- -*- makefile -*-
#
# Makefile for tcludp
#
# Basic build, test and install
#   nmake /f makefile.vc INSTALLDIR=c:\tcl
#   nmake /f makefile.vc INSTALLDIR=c:\tcl test
#   nmake /f makefile.vc INSTALLDIR=c:\tcl install
#
# For other build options (debug, static etc.),
# See TIP 477 (https://core.tcl.tk/tips/doc/trunk/tip/477.md) for
# detailed documentation.
# 
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
#------------------------------------------------------------------------------

PROJECT = udp
!include "rules-ext.vc"

PRJ_OBJS = $(TMP_DIR)\udp_tcl.obj
PRJ_DEFINES     = -D_CRT_SECURE_NO_WARNINGS \
		  -D_WINSOCK_DEPRECATED_NO_WARNINGS
PRJ_LIBS	= ws2_32.lib

PRJ_DOCS = $(OUT_DIR)\udp.html


# Define the standard targets
!include "$(_RULESDIR)\targets.vc"

# Project specific targets

install:    default-install-demos
pkgindex:   default-pkgindex

# Implicit rule to generate html from man files
# NOTE: this requires doctools from tcllib
DOC2HTML = $(TCLSH) "$(TOOLSDIR)\mpexpand.tcl" html
{$(DOCDIR)}.man{$(OUT_DIR)}.html:
	$(DOC2HTML) $< $@
        @$(TCLSH) <<
set name $(@:\=/)
set f [open $$name r]; set d [read $$f]; close $$f
set d [regsub {</head>} $$d {<link rel="stylesheet" href="manpage.css" type="text/css"></head>}]
set f [open $$name w]; puts -nonewline $$f $$d; close $$f
<<

.SUFFIXES: .man

# Cannot use default-install-docs because we generate docs on the fly
doc:        setup $(PRJ_DOCS)
install-docs: doc
	@echo Installing documentation to '$(DOC_INSTALL_DIR)'
	@if not exist $(DOC_INSTALL_DIR)\NUL mkdir "$(DOC_INSTALL_DIR)"
	@$(CPY) "$(DOCDIR)\manpage.css" "$(DOC_INSTALL_DIR)\" >NUL
	@for %i in ($(PRJ_DOCS)) do @$(CPY) %i "$(DOC_INSTALL_DIR)\" > NUL


