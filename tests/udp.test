# Commands covered:  udp_open udp_conf udp_peek
#
# This file contains a collection of tests for one or more of the Tcl
# UDP package commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 2003 by Pat Thoyts <patthoyts@users.sourceforge.net>
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @(#) $Id: udp.test,v 1.3 2003/03/04 02:05:10 patthoyts Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
}

package require udp

# -------------------------------------------------------------------------

test udp-1.0 {udp_open with any port} {
    global _udp
    list [catch {
        set _udp [udp_open]
        regexp {sock\d+} $_udp } msg] $msg
} {0 1}

test udp-1.1 {udp_conf -myport} {
    global _udp
    list [catch {string is integer [udp_conf $_udp -myport]} msg] $msg
} {0 1}

test udp_1.3 {close udp socket} {
    global _udp
    list [catch {close $_udp} msg] $msg
} {0 {}}

test udp-1.4 {udp_open on assigned port} {
    list [catch {
        set port 0xf0b0
        set s [udp_open $port]
        set check [udp_conf $s -myport]
        close $s
        format 0x%04x $check
    } msg] $msg
} {0 0xf0b0}

test udp-1.5 {udp_conf -remote before seting remote details} {
    list [catch {
        set s [udp_open]
        set r [udp_conf $s -remote]
        close $s
        set r
    } msg] $msg
} {0 {}}

test udp-1.6 {udp_conf -peer before setting remote details} {
    list [catch {
        set s [udp_open]
        set r [udp_conf $s -peer]
        close $s
        set r
    } msg] $msg
} {0 {}}


test udp-2.0 {udp_conf using service name} {
    list [catch {
        set s [udp_open]
        udp_conf $s localhost ntp
        set r [udp_conf $s -remote]
        close $s
        set r} msg] $msg
} {0 {localhost 123}}

test udp-2.1 {udp_conf using service number} {
    list [catch {
        set s [udp_open]
        udp_conf $s localhost 123
        set r [udp_conf $s -remote]
        close $s
        set r} msg] $msg
} {0 {localhost 123}}

test udp-2.2 {udp_open on named port} windows {
    list [catch {
        set port ntp
        set s [udp_open $port]
        set check [udp_conf $s -myport]
        close $s
        format 0x%04x $check
    } msg] $msg
} {0 0x007b}


# -------------------------------------------------------------------------
# cleanup
catch {unset _udp}
::tcltest::cleanupTests
return

# Local variables:
# mode: tcl
# indent-tabs-mode: nil
# End:
