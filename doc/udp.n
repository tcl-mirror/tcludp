'\"
'\" Generated from file 'udp.man' by tcllib/doctools with format 'nroff'
'\" Copyright (c) 1999-2000 Columbia University; all rights reserved
'\"
'\" -*- tcl -*- doctools manpage
'\" To convert this to another documentation format use the mpexpand
'\"           script from tcllib: mpexpand nroff udp.man udp.n
'\"                               mpexpand html  udp.man udp.html
'\"
.so man.macros
.TH "udp" n 1.0.5  "Tcl UDP extension"
.BS
.SH "NAME"
udp \- Create UDP sockets in Tcl
.SH "SYNOPSIS"
package require \fBTcl  8.0\fR
.sp
package require \fBudp  1.0\fR
.sp
\fBudp_open\fR ?\fIport\fR?\fR
.sp
\fBudp_conf\fR \fIsock\fR \fIhost\fR \fIport\fR\fR
.sp
\fBudp_conf\fR \fIsock\fR \fI?-myport?\fR \fI?-remote?\fR \fI?-peer?\fR\fR
.sp
\fBudp_conf\fR ?\fI-mcastadd\fR \fI-mcastdrop\fR? \fIgroupaddr\fR\fR
.sp
\fBudp_peek\fR \fIsock\fR ?\fIbuffersize\fR?\fR
.sp
.BE
.SH "DESCRIPTION"
This package provides support for using UDP through Tcl.
.SH "COMMANDS"
.TP
\fBudp_open\fR ?\fIport\fR?\fR
\fBudp_open\fR will open a UDP socket. If \fIport\fR is specified the UDP
socket will be opened on that port. Otherwise the system will choose a port
and the user can use the \fBudp_conf\fR command to obtain the port number
if required.
.TP
\fBudp_conf\fR \fIsock\fR \fIhost\fR \fIport\fR\fR
\fBudp_conf\fR in this configuration is used to specify the remote destination
for packets written to this \fIsock\fR. You must call this command before
writing data to the UDP socket.
.TP
\fBudp_conf\fR \fIsock\fR \fI?-myport?\fR \fI?-remote?\fR \fI?-peer?\fR\fR
In addition to being used to configure the remote host, the \fBudp_conf\fR
command is used to obtain information about the UDP socket.
.RS
.TP
\fI-myport\fR
Returns the local port number of the socket.
.TP
\fI-remote\fR
Returns the remote hostname and port number as set using
\fBudp_conf\fR \fIsock\fR \fIhost\fR \fIport\fR.
.TP
\fI-peer\fR
Returns the remote hostname and port number for the packet most recently
received by this socket.
.RE
.sp
.TP
\fBudp_conf\fR ?\fI-mcastadd\fR \fI-mcastdrop\fR? \fIgroupaddr\fR\fR
FIX ME
.TP
\fBudp_peek\fR \fIsock\fR ?\fIbuffersize\fR?\fR
Examine a packet without removing it from the buffer.
This function is not available on windows.
.SH "EXAMPLES"
.PP
.nf
# Send data to a remote UDP socket
proc udp_puts {host port} {
    set s [udp_open]
    udp_conf $s $host $port
    puts $s "Hello, World"
    close $f
}
.fi
.nf
# A simple UDP server
package require udp

proc udpEventHandler {sock} {
    set pkt [read $sock]
    set peer [udp_conf $sock -peer]
    puts "$peer: [string length $pkt] {$pkt}"
    return
}

proc udp_listen {port} {
    set srv [udp_open $port]
    fconfigure $srv -buffering none -translation binary
    fileevent $srv readable [list ::udpEventHandler $srv]
    puts "Listening on udp port: [udp_conf $srv -myport]"
    return $srv
}

set sock [udp_listen 53530]
vwait forever
close $sock
.fi
.SH "HISTORY"
Some of the code in this extension is copied from Michael Miller's tcludp
package. (http://www.neosoft.com/tcl/ftparchive/sorted/comm/tcludp-1.0/)
Compared with Michael's UDP extension, this extension provides Windows
support and provides the ability of using 'gets/puts' to read/write
the socket. In addition, it provides more configuration ability.
.PP
Enhancements to support binary data and to setup the package for the Tcl
Extension Architecture by Pat Thoyts.
.SH "SEE ALSO"
socket(n)
.SH "KEYWORDS"
networking, socket, udp
.SH "COPYRIGHT"
.nf
Copyright (c) 1999-2000 Columbia University; all rights reserved
.fi