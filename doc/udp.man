[comment {-*- tcl -*- doctools manpage}]
[comment {To convert this to another documentation format use the mpexpand
          script from tcllib: mpexpand nroff udp.man udp.n
                              mpexpand html  udp.man udp.html
}]
[manpage_begin udp n 1.0.3]
[copyright {1999-2000 Columbia University; all rights reserved}]
[moddesc {Tcl UDP extension}]
[titledesc {Create UDP sockets in Tcl}]
[require Tcl 8.0]
[require udp 1.0]
[description]

This package provides support for using UDP through Tcl.

[section "COMMANDS"]

[list_begin definitions]

[call [cmd "udp_open"] [opt "[arg port]"]]

[cmd udp_open] will open a UDP socket. If [arg port] is specified the UDP
socket will be opened on that port. Otherwise the system will choose a port
and the user can use the [cmd udp_conf] command to obtain the port number
if required.

[call [cmd "udp_conf"] [arg "sock"] [arg "host"] [arg "port"]]

[cmd udp_conf] in this configuration is used to specify the remote destination
for packets written to this [arg "sock"]. You must call this command before
writing data to the UDP socket.

[call [cmd "udp_conf"] [arg "sock"] [arg [opt -myport]] [arg [opt -remote]] [arg [opt -peer]]]

In addition to being used to configure the remote host, the [cmd "udp_conf"]
command is used to obtain information about the UDP socket.

[list_begin definitions]

[lst_item "[arg -myport]"]
Returns the local port number of the socket.

[lst_item "[arg -remote]"]
Returns the remote hostname and port number as set using 
[cmd udp_conf] [arg sock] [arg host] [arg port].

[lst_item "[arg -peer]"]
Returns the remote hostname and port number for the packet most recently
received by this socket.

[list_end]

[nl]
[call [cmd "udp_conf"] [opt "[arg -mcastadd] [arg -mcastdrop]"]\
     [arg groupaddr]]

FIX ME

[call [cmd "udp_peek"] [arg "sock"] [opt [arg "buffersize"]]]

Examine a packet without removing it from the buffer.
This function is not available on windows.

[list_end]

[section EXAMPLES]
[para]
[example {
# Send data to a remote UDP socket
proc udp_puts {host port} {
    set s [udp_open]
    udp_conf $s $host $port
    puts $s "Hello, World"
    close $f
}
}]

[example {
# A simple UDP server
package require udp

proc udpEventHandler {sock} {
    set pkt [read $sock]
    set peer [udp_conf $sock -peer]
    puts "$peer: [string length $pkt] {$pkt}"
    return
}

proc udp_listen {port} {
    set srv [udp_open $port]
    fconfigure $srv -buffering none -translation binary
    fileevent $srv readable [list ::udpEventHandler $srv]
    puts "Listening on udp port: [udp_conf $srv -myport]"
    return $srv
}

set sock [udp_listen 53530]
vwait forever
close $sock
}]

[section "HISTORY"]

Some of the code in this extension is copied from Michael Miller's tcludp
package. (http://www.neosoft.com/tcl/ftparchive/sorted/comm/tcludp-1.0/)
Compared with Michael's UDP extension, this extension provides Windows
support and provides the ability of using 'gets/puts' to read/write
the socket. In addition, it provides more configuration ability.

[para]

Enhancements to support binary data and to setup the package for the Tcl
Extension Architecture by Pat Thoyts.

[see_also socket(n)]
[keywords udp socket networking]
[manpage_end]